name: Build, Test & Attest

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  OIDC_PROVIDER_NAME: ${{ secrets.OIDC_PROVIDER_NAME }}
  JF_URL: https://${{ vars.JF_URL }}
  JF_REGISTRY: ${{ vars.JF_REGISTRY }}
  IMAGE_NAME: dvr-app
  BUILD_NAME: dvr-build
  JFROG_CLI_BUILD_NAME: dvr-build
  JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
  JFROG_CLI_BUILD_PROJECT: dvr

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write # Required for attestation
      id-token: write # Added for OIDC token access

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install JFrog CLI
        id: setup-jfrog-cli
        uses: jfrog/setup-jfrog-cli@v4.6.0
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          version: 2.78.9
          oidc-provider-name: ${{ env.OIDC_PROVIDER_NAME }}

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: https://${{ vars.JF_URL }}/${{ env.JF_REGISTRY }}
          username: ${{ steps.setup-jfrog-cli.outputs.oidc-user }}
          password: ${{ steps.setup-jfrog-cli.outputs.oidc-token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ./dvr-app
          push: false
          outputs: type=docker
          tags: ${{ vars.JF_URL }}/${{ env.JF_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          build-args: ${{ env.BUILD_ARGS }}

      - name: Push image to JFrog Artifactory
        id: push-to-artifactory
        run: |
          jf docker push ${{ vars.JF_URL }}/${{ env.JF_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} \
          --project ${JFROG_CLI_BUILD_PROJECT} \
          --build-name ${JFROG_CLI_BUILD_NAME} --build-number ${JFROG_CLI_BUILD_NUMBER}

      - name: Attest docker image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: oci://${{ vars.JF_URL }}/${{ env.JF_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}

      - name: Attest integration tests report
        uses: actions/attest@v2
        with:
          subject-name: oci://${{ vars.JF_URL }}/${{ env.JF_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          predicate-type: "https://jfrog.com/security/attestation/test-report/v1"
          # predicate-path: "coverage/integration/itest-report.json"
          predicate: "{}"

      - name: Build Info Publish
        run: |
          jf rt bp ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER} --project=${JFROG_CLI_BUILD_PROJECT}

      - name: Publish App Version
        env:
          BASE: ${{ env.JF_URL }}/apptrust/api/v1
          APP_KEY: dvr-rental
          APP_VERSION: ${{ github.run_number }}
          ACTUAL_BUILD_NAME: ${{ env.JFROG_CLI_BUILD_NAME }}
          ACTUAL_BUILD_NUMBER: ${{ env.JFROG_CLI_BUILD_NUMBER }}
          JF_PROJECT: ${{ env.JFROG_CLI_BUILD_PROJECT  }}
        run: |
          APP_VERSION_PAYLOAD=$(jq -n \
            --arg version "$APP_VERSION" \
            --arg tag "$APP_TAG" \
            --arg name "$ACTUAL_BUILD_NAME" \
            --arg number "$ACTUAL_BUILD_NUMBER" \
            --arg repo_key "${JF_PROJECT}-build-info" \
            '{
              version: $version,
              tag: $tag,
              sources: {
                builds: [
                  {
                    name: $name,
                    number: $number,
                    repository_key: $repo_key,
                    include_dependencies: false
                  }
                ]
              }
            }')

            echo "📋 Creating application version with payload:"
            echo "$APP_VERSION_PAYLOAD" | jq .

            curl -sS -L -X POST \
                "https://${BASE}/applications/$APP_KEY/versions?async=false" \
                -H "Authorization: Bearer ${{ steps.setup-jfrog-cli.outputs.oidc-token }}" \
                -H "Content-Type: application/json" \
                -d "$APP_VERSION_PAYLOAD" \
                --fail-with-body

      - name: Build Summary
        run: |
          pkgName="${{ env.IMAGE_NAME }}/${{ github.run_number }}"
          pkgLink="${{ env.JF_URL }}/ui/packages/docker:%2F%2F${pkgName}"
          fullImgTag="${{ env.JF_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }}"
          echo "## 🐳 Docker Package Created" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: ${pkgName}" >> $GITHUB_STEP_SUMMARY
          echo "- **Full Tag**: ${fullImgTag}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ env.JF_REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "- **View**: [Open in JFrog]($pkgLink)" >> $GITHUB_STEP_SUMMARY
